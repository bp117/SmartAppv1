[
    {
        "storyId": "STORY-1",
        "storyPoints": 5,
        "featureId": "FEAT-101",
        "acceptanceCriteria": "Criteria for STORY-1",
        "projectId": "PROJ-1",
        "applicationName": "App Alpha",
        "dependencies": ["DEP-11", "DEP-12"],
        "blockers": ["BLOCK-11"],
        "fixVersions": ["v1.0", "v1.2"],
        "attachments": ["http://example.com/attachment1", "http://example.com/attachment2"]
    },
    // ... 9 more records with similar structure
]
const express = require('express');
const fs = require('fs');
const app = express();
const port = 3000;

// Read the mock data from the file
let mockData = [];
fs.readFile('mockData.json', 'utf8', (err, data) => {
    if (err) {
        console.error("Error reading file:", err);
        return;
    }
    mockData = JSON.parse(data);
});

app.get('/mock-story/:id', (req, res) => {
    const storyId = req.params.id;
    const storyDetails = mockData.find(story => story.storyId === storyId);

    if (storyDetails) {
        res.json(storyDetails);
    } else {
        res.status(404).send('Story not found');
    }
});

app.listen(port, () => {
    console.log(`Server running on http://localhost:${port}`);
});


import React, { useState } from 'react';
import { TextField, Button, TextareaAutosize } from '@mui/material';

function StoryFetcher() {
    const [projectId, setProjectId] = useState('');
    const [storyDetails, setStoryDetails] = useState('');
    const [isLoading, setIsLoading] = useState(false);

    const handleFetchStory = async () => {
        setIsLoading(true);
        try {
            const response = await fetch(`/mock-story/${projectId}`);
            const data = await response.json();
            setStoryDetails(JSON.stringify(data, null, 2));
        } catch (error) {
            setStoryDetails('Error fetching story details');
        }
        setIsLoading(false);
    };

    return (
        <div>
            <TextField
                label="Project ID"
                value={projectId}
                onChange={(e) => setProjectId(e.target.value)}
                variant="outlined"
                style={{ marginRight: '10px' }}
            />
            <Button 
                variant="contained" 
                onClick={handleFetchStory}
                disabled={isLoading}
            >
                Fetch Story
            </Button>
            <TextareaAutosize
                aria-label="Story details"
                minRows={10}
                placeholder="Story details will appear here..."
                style={{ width: 300, marginTop: '20px' }}
                value={storyDetails}
                readOnly
            />
        </div>
    );
}

export default StoryFetcher;
